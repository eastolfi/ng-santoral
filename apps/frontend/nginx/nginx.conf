upstream api.url {
  # Could be host.docker.internal - Docker for Mac/Windows - the host itself
  # Could be your API in a appropriate domain
  # Could be other container in the same network, like container_name:port
  server localhost:443;
#   server localhost:2443;
#   server host.docker.internal:2443;
}

server {
    listen 80;

    # server_name example.com;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
#  listen 127.0.0.1;
#  listen 80 default_server;
#  listen [::]:80 default_server;
 listen 443 ssl default_server;
#  listen [::]:443 ssl default_server;
 ssl_certificate /etc/ssl/certs/nginx.crt;
 ssl_certificate_key /etc/ssl/private/nginx.key;
#  ssl on;
 http2 on;
#  server_name frontend;

#  listen 80;
#  server_name frontend;

 location / {
   # This would be the directory where your React app's static files are stored at
   root /usr/share/nginx/html;
   try_files $uri /index.html;
 }

#  location /calendar {
#    # This would be the directory where your React app's static files are stored at
#    root /usr/share/nginx/html;
#    try_files $uri /index.html;
#  }

 location /api/v1 {
   proxy_set_header X-Real-IP $remote_addr;
   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
   proxy_set_header X-NginX-Proxy true;
   proxy_set_header Host $http_host;
   proxy_set_header Access-Control-Allow-Origin *;
   proxy_set_header  Authorization $http_authorization;
   proxy_pass_header Authorization;

#    if ($request_method = 'OPTIONS') {
#       add_header 'Access-Control-Max-Age' 1728000;
#       add_header 'Access-Control-Allow-Origin' '*';
#       add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,
#       X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
#       add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';
#       add_header 'Content-Type' 'application/json';
#       add_header 'Content-Length' 0;
#       return 204;
#     }

#     add_header 'Access-Control-Allow-Origin' '*';
#     add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,
#     X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
#     add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

#    proxy_pass http://192.168.1.119:3009/api;
   proxy_pass https://192.168.1.119:2443/api;
#    proxy_pass https://api.url/api;
#    proxy_pass http://backend:8080/services/m;
#    proxy_ssl_session_reuse off;
   proxy_cache_bypass $http_upgrade;
   proxy_redirect off;

   proxy_ssl_certificate     /etc/ssl/certs/nginx.crt;
   proxy_ssl_certificate_key /etc/ssl/private/nginx.key;
 }

 location /api/v2 {
   proxy_set_header X-Real-IP $remote_addr;
   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
   proxy_set_header X-NginX-Proxy true;
   proxy_set_header Host $http_host;
   proxy_set_header Access-Control-Allow-Origin *;
   proxy_set_header  Authorization $http_authorization;
   proxy_pass_header Authorization;

#    proxy_pass http://backend:8080/services/m;
#    proxy_ssl_session_reuse off;
   proxy_cache_bypass $http_upgrade;
   proxy_redirect off;

   proxy_ssl_certificate     /etc/ssl/certs/nginx.crt;
   proxy_ssl_certificate_key /etc/ssl/private/nginx.key;

   proxy_pass https://192.168.1.119:2443/api;
 }
}
